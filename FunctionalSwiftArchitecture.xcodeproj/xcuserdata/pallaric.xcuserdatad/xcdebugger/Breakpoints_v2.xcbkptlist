<?xml version="1.0" encoding="UTF-8"?>
<Bucket
   type = "1"
   version = "2.0">
   <Breakpoints>
      <BreakpointProxy
         BreakpointExtensionID = "Xcode.Breakpoint.FileBreakpoint">
         <BreakpointContent
            shouldBeEnabled = "Yes"
            ignoreCount = "0"
            continueAfterRunningActions = "No"
            filePath = "FunctionalSwiftArchitecture/presentation/JokesPresentation.swift"
            timestampString = "534852990.335406"
            startingColumnNumber = "9223372036854775807"
            endingColumnNumber = "9223372036854775807"
            startingLineNumber = "32"
            endingLineNumber = "32"
            landmarkName = "drawJoke(joke:)"
            landmarkType = "9">
            <Locations>
               <Location
                  shouldBeEnabled = "Yes"
                  ignoreCount = "0"
                  continueAfterRunningActions = "No"
                  symbolName = "FunctionalSwiftArchitecture.drawJoke(joke: FunctionalSwiftArchitecture.JokeViewModel) -&gt; FunctionalKit.Reader&lt;FunctionalSwiftArchitecture.GetRandomJokeContext, FunctionalKit.Future&lt;FunctionalKit.Result&lt;FunctionalSwiftArchitecture.JokeError, ()&gt;&gt;&gt;"
                  moduleName = "FunctionalSwiftArchitecture"
                  usesParentBreakpointCondition = "Yes"
                  urlString = "file:///Users/pallaric/Documents/Mobile/projects/training/FunctionalSwiftArchitecture/FunctionalSwiftArchitecture/FunctionalSwiftArchitecture/presentation/JokesPresentation.swift"
                  timestampString = "534852990.350035"
                  startingColumnNumber = "9223372036854775807"
                  endingColumnNumber = "9223372036854775807"
                  startingLineNumber = "32"
                  endingLineNumber = "32"
                  offsetFromSymbolStart = "118">
               </Location>
               <Location
                  shouldBeEnabled = "Yes"
                  ignoreCount = "0"
                  continueAfterRunningActions = "No"
                  symbolName = "closure #1 (FunctionalSwiftArchitecture.GetRandomJokeContext) -&gt; FunctionalKit.Reader&lt;FunctionalSwiftArchitecture.GetRandomJokeContext, FunctionalKit.Future&lt;FunctionalKit.Result&lt;FunctionalSwiftArchitecture.JokeError, ()&gt;&gt;&gt; in FunctionalSwiftArchitecture.drawJoke(joke: FunctionalSwiftArchitecture.JokeViewModel) -&gt; FunctionalKit.Reader&lt;FunctionalSwiftArchitecture.GetRandomJokeContext, FunctionalKit.Future&lt;FunctionalKit.Result&lt;FunctionalSwiftArchitecture.JokeError, ()&gt;&gt;&gt;"
                  moduleName = "FunctionalSwiftArchitecture"
                  usesParentBreakpointCondition = "Yes"
                  urlString = "file:///Users/pallaric/Documents/Mobile/projects/training/FunctionalSwiftArchitecture/FunctionalSwiftArchitecture/FunctionalSwiftArchitecture/presentation/JokesPresentation.swift"
                  timestampString = "534852990.352223"
                  startingColumnNumber = "9223372036854775807"
                  endingColumnNumber = "9223372036854775807"
                  startingLineNumber = "33"
                  endingLineNumber = "33"
                  offsetFromSymbolStart = "125">
               </Location>
               <Location
                  shouldBeEnabled = "Yes"
                  ignoreCount = "0"
                  continueAfterRunningActions = "No"
                  symbolName = "FunctionalSwiftArchitectureTests.drawJoke(joke: FunctionalSwiftArchitectureTests.JokeViewModel) -&gt; FunctionalKit.Reader&lt;FunctionalSwiftArchitectureTests.GetRandomJokeContext, FunctionalKit.Future&lt;FunctionalKit.Result&lt;FunctionalSwiftArchitectureTests.JokeError, ()&gt;&gt;&gt;"
                  moduleName = "FunctionalSwiftArchitectureTests"
                  usesParentBreakpointCondition = "Yes"
                  urlString = "file:///Users/pallaric/Documents/Mobile/projects/training/FunctionalSwiftArchitecture/FunctionalSwiftArchitecture/FunctionalSwiftArchitecture/presentation/JokesPresentation.swift"
                  timestampString = "534852991.338449"
                  startingColumnNumber = "9223372036854775807"
                  endingColumnNumber = "9223372036854775807"
                  startingLineNumber = "32"
                  endingLineNumber = "32"
                  offsetFromSymbolStart = "118">
               </Location>
               <Location
                  shouldBeEnabled = "Yes"
                  ignoreCount = "0"
                  continueAfterRunningActions = "No"
                  symbolName = "closure #1 (FunctionalSwiftArchitectureTests.GetRandomJokeContext) -&gt; FunctionalKit.Reader&lt;FunctionalSwiftArchitectureTests.GetRandomJokeContext, FunctionalKit.Future&lt;FunctionalKit.Result&lt;FunctionalSwiftArchitectureTests.JokeError, ()&gt;&gt;&gt; in FunctionalSwiftArchitectureTests.drawJoke(joke: FunctionalSwiftArchitectureTests.JokeViewModel) -&gt; FunctionalKit.Reader&lt;FunctionalSwiftArchitectureTests.GetRandomJokeContext, FunctionalKit.Future&lt;FunctionalKit.Result&lt;FunctionalSwiftArchitectureTests.JokeError, ()&gt;&gt;&gt;"
                  moduleName = "FunctionalSwiftArchitectureTests"
                  usesParentBreakpointCondition = "Yes"
                  urlString = "file:///Users/pallaric/Documents/Mobile/projects/training/FunctionalSwiftArchitecture/FunctionalSwiftArchitecture/FunctionalSwiftArchitecture/presentation/JokesPresentation.swift"
                  timestampString = "534852991.340374"
                  startingColumnNumber = "9223372036854775807"
                  endingColumnNumber = "9223372036854775807"
                  startingLineNumber = "33"
                  endingLineNumber = "33"
                  offsetFromSymbolStart = "125">
               </Location>
            </Locations>
         </BreakpointContent>
      </BreakpointProxy>
      <BreakpointProxy
         BreakpointExtensionID = "Xcode.Breakpoint.FileBreakpoint">
         <BreakpointContent
            shouldBeEnabled = "Yes"
            ignoreCount = "0"
            continueAfterRunningActions = "No"
            filePath = "FunctionalSwiftArchitecture/presentation/JokesPresentation.swift"
            timestampString = "534852990.335474"
            startingColumnNumber = "9223372036854775807"
            endingColumnNumber = "9223372036854775807"
            startingLineNumber = "33"
            endingLineNumber = "33"
            landmarkName = "drawJoke(joke:)"
            landmarkType = "9">
            <Locations>
               <Location
                  shouldBeEnabled = "Yes"
                  ignoreCount = "0"
                  continueAfterRunningActions = "No"
                  symbolName = "closure #1 (FunctionalSwiftArchitecture.GetRandomJokeContext) -&gt; FunctionalKit.Reader&lt;FunctionalSwiftArchitecture.GetRandomJokeContext, FunctionalKit.Future&lt;FunctionalKit.Result&lt;FunctionalSwiftArchitecture.JokeError, ()&gt;&gt;&gt; in FunctionalSwiftArchitecture.drawJoke(joke: FunctionalSwiftArchitecture.JokeViewModel) -&gt; FunctionalKit.Reader&lt;FunctionalSwiftArchitecture.GetRandomJokeContext, FunctionalKit.Future&lt;FunctionalKit.Result&lt;FunctionalSwiftArchitecture.JokeError, ()&gt;&gt;&gt;"
                  moduleName = "FunctionalSwiftArchitecture"
                  usesParentBreakpointCondition = "Yes"
                  urlString = "file:///Users/pallaric/Documents/Mobile/projects/training/FunctionalSwiftArchitecture/FunctionalSwiftArchitecture/FunctionalSwiftArchitecture/presentation/JokesPresentation.swift"
                  timestampString = "534852990.387971"
                  startingColumnNumber = "9223372036854775807"
                  endingColumnNumber = "9223372036854775807"
                  startingLineNumber = "33"
                  endingLineNumber = "33"
                  offsetFromSymbolStart = "125">
               </Location>
               <Location
                  shouldBeEnabled = "Yes"
                  ignoreCount = "0"
                  continueAfterRunningActions = "No"
                  symbolName = "closure #1 (FunctionalSwiftArchitectureTests.GetRandomJokeContext) -&gt; FunctionalKit.Reader&lt;FunctionalSwiftArchitectureTests.GetRandomJokeContext, FunctionalKit.Future&lt;FunctionalKit.Result&lt;FunctionalSwiftArchitectureTests.JokeError, ()&gt;&gt;&gt; in FunctionalSwiftArchitectureTests.drawJoke(joke: FunctionalSwiftArchitectureTests.JokeViewModel) -&gt; FunctionalKit.Reader&lt;FunctionalSwiftArchitectureTests.GetRandomJokeContext, FunctionalKit.Future&lt;FunctionalKit.Result&lt;FunctionalSwiftArchitectureTests.JokeError, ()&gt;&gt;&gt;"
                  moduleName = "FunctionalSwiftArchitectureTests"
                  usesParentBreakpointCondition = "Yes"
                  urlString = "file:///Users/pallaric/Documents/Mobile/projects/training/FunctionalSwiftArchitecture/FunctionalSwiftArchitecture/FunctionalSwiftArchitecture/presentation/JokesPresentation.swift"
                  timestampString = "534852991.342916"
                  startingColumnNumber = "9223372036854775807"
                  endingColumnNumber = "9223372036854775807"
                  startingLineNumber = "33"
                  endingLineNumber = "33"
                  offsetFromSymbolStart = "125">
               </Location>
            </Locations>
         </BreakpointContent>
      </BreakpointProxy>
      <BreakpointProxy
         BreakpointExtensionID = "Xcode.Breakpoint.FileBreakpoint">
         <BreakpointContent
            shouldBeEnabled = "Yes"
            ignoreCount = "0"
            continueAfterRunningActions = "No"
            filePath = "FunctionalSwiftArchitecture/presentation/JokesPresentation.swift"
            timestampString = "534852990.335521"
            startingColumnNumber = "9223372036854775807"
            endingColumnNumber = "9223372036854775807"
            startingLineNumber = "34"
            endingLineNumber = "34"
            landmarkName = "drawJoke(joke:)"
            landmarkType = "9">
            <Locations>
               <Location
                  shouldBeEnabled = "Yes"
                  ignoreCount = "0"
                  continueAfterRunningActions = "No"
                  symbolName = "closure #1 (FunctionalSwiftArchitecture.GetRandomJokeContext) -&gt; FunctionalKit.Reader&lt;FunctionalSwiftArchitecture.GetRandomJokeContext, FunctionalKit.Future&lt;FunctionalKit.Result&lt;FunctionalSwiftArchitecture.JokeError, ()&gt;&gt;&gt; in FunctionalSwiftArchitecture.drawJoke(joke: FunctionalSwiftArchitecture.JokeViewModel) -&gt; FunctionalKit.Reader&lt;FunctionalSwiftArchitecture.GetRandomJokeContext, FunctionalKit.Future&lt;FunctionalKit.Result&lt;FunctionalSwiftArchitecture.JokeError, ()&gt;&gt;&gt;"
                  moduleName = "FunctionalSwiftArchitecture"
                  usesParentBreakpointCondition = "Yes"
                  urlString = "file:///Users/pallaric/Documents/Mobile/projects/training/FunctionalSwiftArchitecture/FunctionalSwiftArchitecture/FunctionalSwiftArchitecture/presentation/JokesPresentation.swift"
                  timestampString = "534852990.414001"
                  startingColumnNumber = "9223372036854775807"
                  endingColumnNumber = "9223372036854775807"
                  startingLineNumber = "34"
                  endingLineNumber = "34"
                  offsetFromSymbolStart = "612">
               </Location>
               <Location
                  shouldBeEnabled = "Yes"
                  ignoreCount = "0"
                  continueAfterRunningActions = "No"
                  symbolName = "closure #1 (FunctionalSwiftArchitectureTests.GetRandomJokeContext) -&gt; FunctionalKit.Reader&lt;FunctionalSwiftArchitectureTests.GetRandomJokeContext, FunctionalKit.Future&lt;FunctionalKit.Result&lt;FunctionalSwiftArchitectureTests.JokeError, ()&gt;&gt;&gt; in FunctionalSwiftArchitectureTests.drawJoke(joke: FunctionalSwiftArchitectureTests.JokeViewModel) -&gt; FunctionalKit.Reader&lt;FunctionalSwiftArchitectureTests.GetRandomJokeContext, FunctionalKit.Future&lt;FunctionalKit.Result&lt;FunctionalSwiftArchitectureTests.JokeError, ()&gt;&gt;&gt;"
                  moduleName = "FunctionalSwiftArchitectureTests"
                  usesParentBreakpointCondition = "Yes"
                  urlString = "file:///Users/pallaric/Documents/Mobile/projects/training/FunctionalSwiftArchitecture/FunctionalSwiftArchitecture/FunctionalSwiftArchitecture/presentation/JokesPresentation.swift"
                  timestampString = "534852991.345428"
                  startingColumnNumber = "9223372036854775807"
                  endingColumnNumber = "9223372036854775807"
                  startingLineNumber = "34"
                  endingLineNumber = "34"
                  offsetFromSymbolStart = "612">
               </Location>
            </Locations>
         </BreakpointContent>
      </BreakpointProxy>
      <BreakpointProxy
         BreakpointExtensionID = "Xcode.Breakpoint.FileBreakpoint">
         <BreakpointContent
            shouldBeEnabled = "Yes"
            ignoreCount = "0"
            continueAfterRunningActions = "No"
            filePath = "FunctionalSwiftArchitectureTests/ArchitectureTests.swift"
            timestampString = "534852990.335574"
            startingColumnNumber = "9223372036854775807"
            endingColumnNumber = "9223372036854775807"
            startingLineNumber = "51"
            endingLineNumber = "51"
            landmarkName = "tapOnLoadCategoriesButton()"
            landmarkType = "9">
         </BreakpointContent>
      </BreakpointProxy>
      <BreakpointProxy
         BreakpointExtensionID = "Xcode.Breakpoint.FileBreakpoint">
         <BreakpointContent
            shouldBeEnabled = "Yes"
            ignoreCount = "0"
            continueAfterRunningActions = "No"
            filePath = "FunctionalSwiftArchitectureTests/ArchitectureTests.swift"
            timestampString = "534852990.335916"
            startingColumnNumber = "9223372036854775807"
            endingColumnNumber = "9223372036854775807"
            startingLineNumber = "91"
            endingLineNumber = "91"
            landmarkName = "testArchitecture()"
            landmarkType = "7">
         </BreakpointContent>
      </BreakpointProxy>
      <BreakpointProxy
         BreakpointExtensionID = "Xcode.Breakpoint.FileBreakpoint">
         <BreakpointContent
            shouldBeEnabled = "Yes"
            ignoreCount = "0"
            continueAfterRunningActions = "No"
            filePath = "FunctionalSwiftArchitectureTests/ArchitectureTests.swift"
            timestampString = "534852990.336128"
            startingColumnNumber = "9223372036854775807"
            endingColumnNumber = "9223372036854775807"
            startingLineNumber = "56"
            endingLineNumber = "56"
            landmarkName = "categoriesSubscription()"
            landmarkType = "9">
         </BreakpointContent>
      </BreakpointProxy>
      <BreakpointProxy
         BreakpointExtensionID = "Xcode.Breakpoint.FileBreakpoint">
         <BreakpointContent
            shouldBeEnabled = "Yes"
            ignoreCount = "0"
            continueAfterRunningActions = "No"
            filePath = "FunctionalSwiftArchitectureTests/ArchitectureTests.swift"
            timestampString = "534852990.336334"
            startingColumnNumber = "9223372036854775807"
            endingColumnNumber = "9223372036854775807"
            startingLineNumber = "37"
            endingLineNumber = "37"
            landmarkName = "reduce(state:event:)"
            landmarkType = "7">
         </BreakpointContent>
      </BreakpointProxy>
      <BreakpointProxy
         BreakpointExtensionID = "Xcode.Breakpoint.FileBreakpoint">
         <BreakpointContent
            shouldBeEnabled = "Yes"
            ignoreCount = "0"
            continueAfterRunningActions = "No"
            filePath = "FunctionalSwiftArchitectureTests/ArchitectureTests.swift"
            timestampString = "534852990.336534"
            startingColumnNumber = "9223372036854775807"
            endingColumnNumber = "9223372036854775807"
            startingLineNumber = "42"
            endingLineNumber = "42"
            landmarkName = "reduce(state:event:)"
            landmarkType = "7">
         </BreakpointContent>
      </BreakpointProxy>
      <BreakpointProxy
         BreakpointExtensionID = "Xcode.Breakpoint.FileBreakpoint">
         <BreakpointContent
            shouldBeEnabled = "Yes"
            ignoreCount = "0"
            continueAfterRunningActions = "No"
            filePath = "FunctionalSwiftArchitectureTests/ArchitectureTests.swift"
            timestampString = "534852990.336747"
            startingColumnNumber = "9223372036854775807"
            endingColumnNumber = "9223372036854775807"
            startingLineNumber = "83"
            endingLineNumber = "83"
            landmarkName = "testArchitecture()"
            landmarkType = "7">
         </BreakpointContent>
      </BreakpointProxy>
      <BreakpointProxy
         BreakpointExtensionID = "Xcode.Breakpoint.FileBreakpoint">
         <BreakpointContent
            shouldBeEnabled = "Yes"
            ignoreCount = "0"
            continueAfterRunningActions = "No"
            filePath = "FunctionalSwiftArchitectureTests/ArchitectureTests.swift"
            timestampString = "534853031.518789"
            startingColumnNumber = "9223372036854775807"
            endingColumnNumber = "9223372036854775807"
            startingLineNumber = "89"
            endingLineNumber = "89"
            landmarkName = "testArchitecture()"
            landmarkType = "7">
         </BreakpointContent>
      </BreakpointProxy>
   </Breakpoints>
</Bucket>
